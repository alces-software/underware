anchor_options:
  gender_option: &gender_option
    tags: [-g, --gender]
    type: String
    description: >
      Switch NODE_IDENTIFIER to specify a gender, rather than a single node
  configure_answers_option: &configure_answers_option
    tags: [-a ANSWERS_MAPPING, --answers ANSWERS_MAPPING]
    type: String
    description: >
      Given a JSON mapping of question identifiers to answer values, the
      given answers will be saved instead of asking the configure questions
      and saving user input.
  color_output: &color_output
    tags: [--color-output]
    description: >
      Force the output to be coloured even if not outputting to a terminal;
      useful e.g. for piping to `less -R`.
  platform_option: &platform_option
    tags: [-p PLATFORM, --platform PLATFORM]
    type: String
    description: >
      Include config for specified platform in namespace for rendering.
  render_option: &render_option
    tags: [-r, --render]
    description: >
      Fully render all values in the namespace for display.

global_options:
  - tags: [--strict]
    description: >
      Convert warnings to errors
  - tags: [--quiet]
    description: >
      Suppress any warnings from being displayed

subcommands:
  cluster_delete: &cluster_delete
    syntax: underware cluster delete CLUSTER_IDENTIFIER [options]
    summary: Deletes the specified cluster and associated files
    description: >
      Deletes the configuration files and rendered templates associated
      with the cluster. It can not delete the current cluster.
    action: Commands::Cluster::Delete

  cluster_init: &cluster_init
    syntax: underware cluster init CLUSTER_IDENTIFIER [options]
    summary: Create a basic cluster configuration
    description: >
      Creates a new cluster with a basic cluster layout. This command will
      automatically switch to the CLUSTER_IDENTIFIER. This will determine where
      the configuration is saved.

      Please use the `cluster` command to manage the current cluster.
    options:
      - tags: [-b, --bare]
        description: 'Setup a new cluster without any configuration'
    action: Commands::Init

  cluster_list: &cluster_list
    syntax: underware cluster list [options]
    summary: List the current and available clusters
    description: >
      Returns a list of all available clusters. The current cluster is marked
      by an asterisks ('*')
    action: Commands::Cluster

  cluster_switch: &cluster_switch
    syntax: underware cluster switch CLUSTER_IDENTIFIER [options]
    summary: Change the current cluster
    description: >
      Change the current cluster to CLUSTER_IDENTIFIER. The cluster must exist
      before it can be switched to. Use the `cluster init` command to create
      a new cluster
    action: Commands::Cluster

  configure_domain: &configure_domain
    syntax: underware configure domain [options]
    summary: Configure Underware domain
    description: >
      General configuration questions about how the cluster should be setup.
      The configuration answers will then be used when rendering templates.
    action: Commands::Configure::Domain
    options:
      - *configure_answers_option

  configure_group: &configure_group
    syntax: underware configure group GROUP [NODE_RANGE] [options]
    summary: Add or modifies a group of nodes within the cluster
    description: >
      Configure a group of nodes within the cluster. The `GROUP` will be
      automatically created and assigned an index. The `NODE_RANGE` will add
      the nodes to the group (see below). The answers will be used when rendering
      templates specific to the group/nodes.


      The NODE_RANGE specifies the nodes to be added to the group. It supports
      basic alphanumeric naming for a single node. Alternatively, brackets can
      be used to give a node range. It is not required when reconfiguring a
      group.


      NOTE: The NODE_RANGE will add the new nodes to the group. It does not
      replace the nodes within group nor can it change a nodes primary group.
      Re-adding an existing node will always result in an error.
    examples:
      - - Configures 'group1' with a single node 'node1'
        - underware configure group group1 node1
      - - "Configures 'group2' with a range of nodes: 'n01', 'n02', ..., 'n10'"
        - underware configure group group2 n[01-10]
    action: Commands::Configure::Group
    options:
      - *configure_answers_option
      - tags: [-g SECONDARY_GROUPS, --groups SECONDARY_GROUPS]
        type: String
        description: 'A comma separated list of additional secondary groups'

  configure_node: &configure_node
    syntax: underware configure node NODE [options]
    summary: Configure a Underware node
    description: >
      Additional qustions or overrides about a particular node. This will update
      the configuration for this node only.

      This allows for a single node to be configured differently within a group.
      If the `NODE` does not exist, it is automatically assigned to the orphan
      group.
    action: Commands::Configure::Node
    options:
      - *configure_answers_option

  remove_group: &remove_group
    syntax: underware remove group GROUP_NAME [options]
    summary: Removes the group and associated nodes
    description: >
      This will remove the group from the cluster configuration. This action will
      automatically delete all nodes that have it as the primary group. It will
      not delete nodes that have it as a secondary group.


      NOTE: Nodes that use it as a secondary group will now assume it is missing.
      They will still merge in the group config if it exists. The group answers
      are automatically deleted by this command.
    action: Commands::Remove::Group

  remove_nodes: &remove_nodes
    syntax: underware remove nodes NODE_RANGE [options]
    summary: Removes the node from the cluster
    description: >
      This command will remove the node from the cluster configuration. The answer
      files will be removed by this action. However, the static configuration files
      will remain.


      Multiple nodes can be deleted by specifying a node range instead of a single
      node.
    action: Commands::Remove::Nodes

  render_domain: &render_domain
    syntax: underware render domain TEMPLATE [options]
    summary: Render specified template against domain namespace, and output result
    action: Commands::Render::Domain
    options:
      - *platform_option

  render_group: &render_group
    syntax: underware render group GROUP TEMPLATE [options]
    summary: Render specified template against given group namespace, and output result
    action: Commands::Render::Group
    options:
      - *platform_option

  render_node: &render_node
    syntax: underware render node NODE TEMPLATE [options]
    summary: Render specified template against given node namespace, and output result
    action: Commands::Render::Node
    options:
      - *platform_option

  plugin_list: &plugin_list
    syntax: underware plugin list [options]
    summary: List available and activated plugins
    description: >
      List all available Underware plugins, along with which of these are
      currently activated.
    action: Commands::Plugin::List

  plugin_activate: &plugin_activate
    syntax: underware plugin activate PLUGIN_NAME [options]
    summary: Activate given plugin for domain
    action: Commands::Plugin::Activate

  plugin_deactivate: &plugin_deactivate
    syntax: underware plugin deactivate PLUGIN_NAME [options]
    summary: Deactivate given plugin for domain
    action: Commands::Plugin::Deactivate

  view-answers_domain: &view-answers_domain
    syntax: underware view-answers domain [options]
    summary: View configured answers for the overall domain
    description: >
      View configuration questions along with configured answers for the
      overall Underware domain
    action:
      Commands::ViewAnswers::Domain

  view-answers_group: &view-answers_group
    syntax: underware view-answers group GROUP_NAME [options]
    summary: View configured answers for a group
    description: >
      View configuration questions along with configured answers for given
      group and the overall Underware domain
    action:
      Commands::ViewAnswers::Group

  view-answers_node: &view-answers_node
    syntax: underware view-answers node NODE [options]
    summary: View configured answers for a node
    description: >
      View configuration questions along with configured answers for given
      node, its primary group, and the overall Underware domain
    action:
      Commands::ViewAnswers::Node

commands:
  cluster:
    syntax: underware cluster [CLUSTER] [options]
    summary: Initialize, list, switch, and delete cluster configurations
    subcommands:
      delete: *cluster_delete
      list: *cluster_list
      init: *cluster_init
      switch: *cluster_switch

  configure:
    syntax: underware configure [SUB_COMMAND] [options]
    summary: Manage the cluster and node configurations
    subcommands:
      cluster: *configure_domain
      domain: *configure_domain
      group: *configure_group
      node: *configure_node

  each:
    syntax: underware each NODE_IDENTIFIER COMMAND [options]
    summary: Runs a command for a node(s)
    description: >
      Runs the COMMAND for the node/ group specified by NODE_IDENTIFIER.
      Commands that contain spaces must be quoted. The command is first rendered
      by the templater and supports erb tags.
    action: Commands::Each
    options:
      - *gender_option

  eval:
    syntax: underware eval ALCES_COMMAND [options]
    summary: Evaluate argument in context of `alces` namespace
    description: >
      Similar to 'underware view', but evaluates argument directly in 'alces'
      namespace without any preprocessing, and then returns result as JSON.


      Intended to have more stable behaviour than 'underware view', and to provide
      external programs with access to Underware data, whereas 'underware view' is
      intended purely for human usage and its behaviour may change as needed to
      whatever is most useful for this.
    action: Commands::Eval
    options:
      - *color_output
      - *platform_option
      - *render_option

  overview:
    syntax: underware overview [options]
    summary: Gives an overview of the configured groups
    action: Commands::Overview

  plugin:
    syntax: underware plugin [SUB_COMMAND] [options]
    summary: View and manage activated plugins
    subcommands:
      list: *plugin_list
      activate: *plugin_activate
      deactivate: *plugin_deactivate

  remove:
    syntax: underware remove [SUB_COMMAND] [options]
    summary: Remove a configured group/nodes from the cluster
    subcommands:
      group: *remove_group
      nodes: *remove_nodes

  render:
    syntax: underware render [SUB_COMMAND] [options]
    summary: Render a template against specified namespace, and output result
    subcommands:
      domain: *render_domain
      group: *render_group
      node: *render_node

  template:
    syntax: underware template [options]
    summary: Render all Underware templates for all platforms
    description: >
      This command renders all the templates provided by Underware for every
      combination of platform and scope that this installation of Underware is
      configured with.


      Specifically this consists of rendering, for every platform, the
      available domain, group, and node templates (both platform-specific and
      platform-independent content), for the domain, every group, and every
      node respectively.


      The rendered templates will be output to a standard hierarchy under
      `/var/lib/underware/rendered/` and can then be used, on their own or in
      combination with other Alces tools, to deploy, configure, or otherwise
      manage a cluster at different scales and across different platforms.
    action: Commands::Template

  view-answers:
    syntax: underware view-answers [SUB_COMMAND] [options]
    summary: View configured answers
    subcommands:
      domain: *view-answers_domain
      group: *view-answers_group
      node: *view-answers_node

  view:
    syntax: underware view ALCES_COMMAND [options]
    summary: View domain templating config, optionally in context for given node
    description: >
      View the templating object that will be used for rendering templates. It
      may optionally begin with 'alces' but this is optional.


      The nodes, groups, and domain namepaces can be viewed. The nodes
      and groups have to be followed by the name of the object. The command
      can be delimited by spaces or periods.


      The displayed JSON can be navigated in the same way as templating. This
      means 'alces.domain' will show all domain level parameters, where
      'alces.domain.config' will only show the config.
    action: Commands::View
    options:
      - *color_output
      - *platform_option
      - *render_option
